{"version":3,"sources":["img/weather_1.svg","img/weather_6.svg","img/weather_23.svg","img/weather_35.svg","img/weather_30.svg","components/Header.js","components/Logo.js","components/Form.js","components/ActualWeatherInfo.js","components/ActualWeather.js","components/CustomizedLabel.js","components/CustomizedAxisTick.js","components/HoursWeather.js","components/NextDays.js","components/DayWeather.js","components/Result.js","components/App.js","serviceWorker.js","index.js","img/weather_2.svg","img/weather_5.svg","img/weather_3.svg","img/weather_4.svg","img/weather_7.svg","img/weather_8.svg"],"names":["module","exports","__webpack_require__","p","Header","props","react_default","a","createElement","style","position","top","left","paddingTop","paddingBottom","paddingLeft","width","textAlign","background","cursor","display","alignItems","color","fontWeight","onClick","handleClick","index_esm","marginRight","Logo","Fragment","className","Form","src_components_Logo","onSubmit","submit","api","error","borderBottom","type","placeholder","value","onChange","change","fontSize","marginTop","city","bottom","ActualWeatherInfo","weatherImgSrc","actualTime","Number","Date","toLocaleTimeString","substring","actualTemperature","Math","round","weather","temp","image","clearSkyDay","fewCloudsDay","scatteredCloudsDay","showerRainDay","rainDay","thunderstormDay","snowDay","mistDay","clearSkyNight","fewCloudsNight","rainNight","marginLeft","height","src","alt","marginBottom","borderRight","wi_index_esm","wind","humidity","gi_index_esm","pressure","ActualWeather","_props$weather","date","fa_index_esm","size","margin","textTransform","components_ActualWeatherInfo","CustomizedLabel","_this$props","this","x","y","dy","fill","textAnchor","Component","CustomizedAxisTick","payload","transform","concat","HoursWeather","windowWidth","window","innerWidth","es6","right","data","weatherData","dataKey","stroke","tick","components_CustomizedAxisTick","label","components_CustomizedLabel","weatherDayImgSrc","weatherNightImgSrc","NextDays","weatherIcon","nextDaysWeather","reduce","acc","el","k","max","min","replace","DayWeather","today","day","month","temperatures","allDays","forEach","element","push","e1","obj","e2","tempMin","tempMax","map","src_components_NextDays","key","Result","state","_this2","API","fetch","then","response","ok","Error","json","Object","toConsumableArray","list","slice","hour","name","dt_txt","uv","main","temp_max","temp_min","icon","setState","catch","console","log","_this$props$weather","err","content","components_ActualWeather","components_HoursWeather","components_DayWeather","APIKey","App","handleInputChange","e","_this","target","handleCitySubmit","preventDefault","time","toLocaleString","prevState","speed","components_Header","components_Result","src_components_Form","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed27dfcf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/weather_1.2fd75af0.svg\";","module.exports = __webpack_public_path__ + \"static/media/weather_6.811ba74f.svg\";","module.exports = __webpack_public_path__ + \"static/media/weather_23.006e1fc7.svg\";","module.exports = __webpack_public_path__ + \"static/media/weather_35.79d1c380.svg\";","module.exports = __webpack_public_path__ + \"static/media/weather_30.0ecbe8be.svg\";","import React from 'react';\r\nimport { IoIosArrowBack } from 'react-icons/io';\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <div style={{ position: 'fixed', top: 0, left: 0, paddingTop: '20px', paddingBottom: '20px', paddingLeft: '20px', width: '100%', textAlign: 'left', background: 'rgba(255,255,255, 0.1)' }}>\r\n            <div style={{ cursor: 'pointer', display: \"flex\", alignItems: 'center', color: '#fff', fontWeight: 300 }} onClick={props.handleClick}>\r\n                <IoIosArrowBack style={{ marginRight: '15px' }} />\r\n                Wróć\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <>\r\n            <div className=\"icon sun-shower\">\r\n                <div className=\"cloud\"></div>\r\n                <div className=\"sun\">\r\n                    <div className=\"rays\"></div>\r\n                </div>\r\n                <div className=\"rain\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport Logo from './Logo';\r\nimport './Form.css'\r\n\r\nconst Form = (props) => {\r\n\r\n    return (\r\n        <div className=\"FormContainer\" >\r\n            <div className=\"content\">\r\n                <Logo />\r\n                <h1 style={{ color: '#fff' }}>iWeather</h1>\r\n                <form onSubmit={props.submit} >\r\n                    <input style={!props.api && props.error ? { borderBottom: '1px solid #d35266' } : { borderBottom: '1px solid #fff' }}\r\n                        type=\"text\"\r\n                        placeholder=\"Wpisz miejscowość\"\r\n                        value={props.value}\r\n                        onChange={props.change}\r\n                    />\r\n                    {!props.api && props.error ? <span style={{ position: 'absolute', color: '#d35266', fontSize: '12px', marginTop: '43px' }}>Brak miejscowości {props.city} w bazie</span> : null}\r\n                    <button>Wyszukaj</button>\r\n                </form>\r\n            </div>\r\n            <p style={{ color: '#fff', position: 'absolute', bottom: 0, fontWeight: 300 }}>Copyright by Biszczak</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form","import React from 'react';\r\nimport clearSkyDay from '../img/weather_3.svg';\r\nimport clearSkyNight from '../img/weather_4.svg';\r\nimport fewCloudsDay from '../img/weather_2.svg';\r\nimport scatteredCloudsDay from '../img/weather_1.svg';\r\nimport showerRainDay from '../img/weather_6.svg';\r\nimport rainDay from '../img/weather_7.svg';\r\nimport thunderstormDay from '../img/weather_23.svg';\r\nimport snowDay from '../img/weather_35.svg';\r\nimport mistDay from '../img/weather_30.svg';\r\nimport rainNight from '../img/weather_8.svg';\r\nimport fewCloudsNight from '../img/weather_5.svg';\r\nimport { WiStrongWind, WiRaindrops, } from 'react-icons/wi'\r\nimport { GiSpeedometer } from 'react-icons/gi'\r\n\r\nconst ActualWeatherInfo = (props) => {\r\n    let weatherImgSrc = null;\r\n    // console.log(props.weather.image)\r\n    const actualTime = Number(new Date().toLocaleTimeString().substring(0, 2));\r\n    const actualTemperature = Math.round(props.weather.temp - 273.15)\r\n    // console.log(actualTime)\r\n    if (actualTime > 5 && actualTime < 21) {\r\n        if (props.weather.image === '01d') { weatherImgSrc = clearSkyDay; }\r\n        else if (props.weather.image === '02d') { weatherImgSrc = fewCloudsDay; }\r\n        else if (props.weather.image === '03d') { weatherImgSrc = scatteredCloudsDay; }\r\n        else if (props.weather.image === '04d') { weatherImgSrc = scatteredCloudsDay; }\r\n        else if (props.weather.image === '09d') { weatherImgSrc = showerRainDay; }\r\n        else if (props.weather.image === '10d') { weatherImgSrc = rainDay; }\r\n        else if (props.weather.image === '11d') { weatherImgSrc = thunderstormDay; }\r\n        else if (props.weather.image === '13d') { weatherImgSrc = snowDay; }\r\n        else if (props.weather.image === '50d') { weatherImgSrc = mistDay; }\r\n        else { weatherImgSrc = fewCloudsDay; }\r\n    } else {\r\n        if (props.weather.image === '01n') { weatherImgSrc = clearSkyNight; }\r\n        else if (props.weather.image === '02n') { weatherImgSrc = fewCloudsNight; }\r\n        else if (props.weather.image === '03n') { weatherImgSrc = scatteredCloudsDay; }\r\n        else if (props.weather.image === '04n') { weatherImgSrc = scatteredCloudsDay; }\r\n        else if (props.weather.image === '09n') { weatherImgSrc = showerRainDay; }\r\n        else if (props.weather.image === '11n') { weatherImgSrc = thunderstormDay; }\r\n        else if (props.weather.image === '13n') { weatherImgSrc = snowDay; }\r\n        else if (props.weather.image === '50n') { weatherImgSrc = mistDay; }\r\n        else if (props.weather.image === '10n') { weatherImgSrc = rainNight; }\r\n        else { weatherImgSrc = fewCloudsNight; }\r\n    }\r\n    // console.log(clearSkyDay)\r\n    return (\r\n        <div className=\"actual-container\" style={{ width: '360px', marginLeft: 'auto', marginRight: 'auto' }}>\r\n            <div className=\"actual-wrapper\" style={{ display: 'flex', alignItems: 'center', marginTop: '30px', height: '200px' }}>\r\n                <div style={{ textAlign: 'right' }}>\r\n                    <img src={weatherImgSrc} alt=\"weather img\" style={{ width: '150px', marginRight: '30px' }} />\r\n                </div>\r\n                <div style={{ textAlign: 'left' }}>\r\n                    <span style={{ fontSize: '68px', fontWeight: '400', width: '50%', textAlign: 'center', marginLeft: '30px' }}>{actualTemperature}°C</span>\r\n                </div>\r\n            </div>\r\n            <div style={{ display: 'flex', marginLeft: 'auto', marginRight: 'auto', marginBottom: '50px' }}>\r\n                <div className=\"additional-info\" style={{ width: '119px', borderRight: '1px solid #fff', textAlign: 'center' }}>\r\n                    <WiStrongWind fontSize=\"32\" fontWeight=\"300\" />\r\n                    <p style={{ fontSize: '12px', marginTop: 0 }}>Wiatr</p>\r\n                    <p style={{ fontSize: '12px', }}>{props.weather.wind} m/s</p>\r\n                </div>\r\n                <div className=\"additional-info\" style={{ width: '119px', borderRight: '1px solid #fff', textAlign: 'center' }}>\r\n                    <WiRaindrops fontSize=\"32\" fontWeight=\"300\" />\r\n                    <p style={{ fontSize: '12px', marginTop: 0 }}>Wilgotność</p>\r\n                    <p style={{ fontSize: '12px', }}>{props.weather.humidity} %</p>\r\n                </div>\r\n                <div className=\"additional-info\" style={{ width: '119px', textAlign: 'center' }}>\r\n                    <GiSpeedometer fontSize=\"32\" fontWeight=\"300\" />\r\n                    <p style={{ fontSize: '12px', marginTop: 0 }}>Ciśnienie</p>\r\n                    <p style={{ fontSize: '12px', }}>{props.weather.pressure} hPa</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActualWeatherInfo;","import React from 'react';\r\nimport { FaMapMarkerAlt } from 'react-icons/fa';\r\nimport ActualWeatherInfo from './ActualWeatherInfo';\r\n\r\nconst ActualWeather = (props) => {\r\n    const { date, city, } = props.weather;\r\n    return (\r\n        <div className=\"ActualWeather\">\r\n            <div className=\"Details\" style={{ borderBottom: '1px solid rgba(255,255,255, 0.6' }}>\r\n                <FaMapMarkerAlt size={16} style={{ color: '#fff' }} />\r\n                <h4 style={{ fontWeight: '500', margin: '0', textTransform: 'capitalize' }}>{city}</h4>\r\n                <p className=\"Date\" style={{ fontSize: '12px', margin: '0', color: '#e4e3e8' }}>{date}</p>\r\n                <ActualWeatherInfo weather={props.weather} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActualWeather;","import React, { Component } from 'react';\r\n\r\n\r\nclass CustomizedLabel extends Component {\r\n    render() {\r\n        const { x, y, value } = this.props;\r\n        // console.log(this.props.stroke)\r\n        return <text style={{ color: '#fff' }} x={x} y={y} dy={-10} fill={'#fff'} fontSize={16} fontWeight={400} textAnchor=\"middle\">{value}&#176;</text>\r\n    }\r\n};\r\n\r\nexport default CustomizedLabel","import React, { Component } from 'react';\r\n\r\n\r\nclass CustomizedAxisTick extends Component {\r\n    render() {\r\n        const { x, y, payload } = this.props;\r\n\r\n        return (\r\n            <g transform={`translate(${x},${y})`}>\r\n                <text x={15} y={0} dy={16} textAnchor=\"end\" fill=\"#fff\" transform=\"rotate(0)\">\r\n                    {payload.value}\r\n                </text>\r\n            </g>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomizedAxisTick;","import React from 'react';\r\nimport { LineChart, Line, XAxis } from 'recharts';\r\nimport CustomizedLabel from './CustomizedLabel';\r\nimport CustomizedAxisTick from './CustomizedAxisTick';\r\n\r\n\r\n\r\nconst HoursWeather = (props) => {\r\n    const windowWidth = window.innerWidth;\r\n    return (\r\n        <div style={{ color: '#fff', borderBottom: '1px solid rgba(255, 255, 255, 0.5)', paddingBottom: '15px' }}>\r\n            <h4 style={{ fontWeight: 300, marginTop: '47px' }}>TEMPERATURA GODZINNA</h4>\r\n\r\n            <LineChart width={windowWidth < 732 ? (windowWidth - 35) : 700} height={250} margin={{ left: 30, right: 30, top: 50 }} data={props.weatherData}>\r\n                {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\r\n                <XAxis dataKey=\"name\" height={60} width={600} stroke=\"#fff\" tick={<CustomizedAxisTick />} />\r\n                {/* <YAxis /> */}\r\n                <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#fff\" label={<CustomizedLabel />} />\r\n            </LineChart>\r\n\r\n\r\n        </div>\r\n    )\r\n    // }\r\n}\r\n\r\nexport default HoursWeather;","import React from 'react';\r\nimport './NextDays.css';\r\nimport clearSkyDay from '../img/weather_3.svg';\r\nimport clearSkyNight from '../img/weather_4.svg';\r\nimport fewCloudsDay from '../img/weather_2.svg';\r\nimport scatteredCloudsDay from '../img/weather_1.svg';\r\nimport showerRainDay from '../img/weather_6.svg';\r\nimport rainDay from '../img/weather_7.svg';\r\nimport thunderstormDay from '../img/weather_23.svg';\r\nimport snowDay from '../img/weather_35.svg';\r\nimport mistDay from '../img/weather_30.svg';\r\nimport rainNight from '../img/weather_8.svg';\r\nimport fewCloudsNight from '../img/weather_5.svg';\r\n\r\nlet weatherDayImgSrc = null;\r\nlet weatherNightImgSrc = null;\r\n\r\n\r\n\r\nconst NextDays = (props) => {\r\n    // { console.log(props.nextDaysWeather) }\r\n    const highest = arr => (arr || []).reduce((acc, el) => {\r\n        acc.k[el] = acc.k[el] ? acc.k[el] + 1 : 1\r\n        acc.max = acc.max ? acc.max < acc.k[el] ? el : acc.max : el\r\n        return acc\r\n    }, { k: {} }).max\r\n\r\n    const actualConditions = highest(props.nextDaysWeather.weather);\r\n    // console.log(actualConditions)\r\n    const weatherIcon = actualConditions.substring(0, 2);\r\n    // console.log(weatherIcon)\r\n    // const nightOrDay = actualConditions[actualConditions.length - 1];\r\n    // console.log(nightOrDay);\r\n\r\n    switch (weatherIcon) {\r\n        case '01':\r\n            weatherDayImgSrc = clearSkyDay;\r\n            break;\r\n        case '02':\r\n            weatherDayImgSrc = fewCloudsDay;\r\n            break;\r\n        case '03':\r\n            weatherDayImgSrc = scatteredCloudsDay;\r\n            break;\r\n        case '04':\r\n            weatherDayImgSrc = scatteredCloudsDay;\r\n            break;\r\n        case '09':\r\n            weatherDayImgSrc = showerRainDay;\r\n            break;\r\n        case '10':\r\n            weatherDayImgSrc = rainDay;\r\n            break;\r\n        case '11':\r\n            weatherDayImgSrc = thunderstormDay;\r\n            break;\r\n        case '13':\r\n            weatherDayImgSrc = snowDay;\r\n            break;\r\n        case '50':\r\n            weatherDayImgSrc = mistDay;\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n    switch (weatherIcon) {\r\n        case '01':\r\n            weatherNightImgSrc = clearSkyNight;\r\n            break;\r\n        case '02':\r\n            weatherNightImgSrc = fewCloudsNight;\r\n            break;\r\n        case '03':\r\n            weatherNightImgSrc = scatteredCloudsDay;\r\n            break;\r\n        case '04':\r\n            weatherNightImgSrc = scatteredCloudsDay;\r\n            break;\r\n        case '09':\r\n            weatherNightImgSrc = showerRainDay;\r\n            break;\r\n        case '10':\r\n            weatherNightImgSrc = thunderstormDay;\r\n            break;\r\n        case '11':\r\n            weatherNightImgSrc = snowDay;\r\n            break;\r\n        case '13':\r\n            weatherNightImgSrc = mistDay;\r\n            break;\r\n        case '50':\r\n            weatherNightImgSrc = rainNight;\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"next-days-container\">\r\n            <div className=\"temps\">\r\n                <div className=\"day-temp\">\r\n                    <img src={weatherDayImgSrc} alt=\"weather img\" style={{ width: '22px' }} />\r\n                    <p>{props.nextDaysWeather.max}°</p>\r\n                </div>\r\n                <div className=\"night-temp\">\r\n                    <img src={weatherNightImgSrc} alt=\"weather img\" style={{ width: '22px' }} />\r\n                    <p>{props.nextDaysWeather.min}°</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"date\">{props.nextDaysWeather.date.replace('-', '.')}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NextDays;","import React from 'react';\r\nimport NextDays from './NextDays.js'\r\n\r\n\r\n\r\n\r\nconst DayWeather = (props) => {\r\n    const today = props.weather.date;\r\n    let day = Number(today.substring(0, 2));\r\n    let month = Number(today.substring(3, 5));\r\n    const temperatures = [];\r\n\r\n    let nextDaysWeather = [];\r\n    props.allDays.forEach(element => {\r\n\r\n        if ((element.day > day && element.month === month) || (element.day < day && element.month > month)) {\r\n            nextDaysWeather.push(element);\r\n            day = element.day;\r\n            month = element.month\r\n\r\n        }\r\n    });\r\n\r\n    // console.log(props.allDays)\r\n    const getMinAndMaxTemp = () => {\r\n        nextDaysWeather.forEach(e1 => {\r\n            let obj = { date: '', day: e1.day, min: 100, max: -100, weather: [] };\r\n            obj.date = e1.date;\r\n            // obj.weather = e1.weather\r\n            props.allDays.forEach(e2 => {\r\n                if (e1.date === e2.date) {\r\n                    obj.weather.push(e2.weather)\r\n                    if (e2.tempMin < obj.min || e2.tempMin < obj.max) {\r\n                        obj.min = e2.tempMin;\r\n                    }\r\n\r\n                    if (e2.tempMax > obj.max || e2.tempMax > obj.min) {\r\n                        obj.max = e2.tempMax;\r\n                    }\r\n                }\r\n            })\r\n            temperatures.push(obj)\r\n        });\r\n    }\r\n\r\n    getMinAndMaxTemp();\r\n    nextDaysWeather = [...temperatures];\r\n    // console.log(nextDaysWeather);\r\n\r\n\r\n    // console.log(nextDaysWeather)\r\n    // console.log(temperatures)\r\n    // console.log(props.weather.image)\r\n    return (\r\n        <div style={{ paddingBottom: '100px' }}>\r\n            <h4 style={{ fontWeight: '300', marginTop: '46px', marginBottom: '35px' }}>NA NASTĘPNE DNI</h4>\r\n            <div style={{ display: 'flex' }}>\r\n\r\n                {\r\n                    nextDaysWeather.map(day => {\r\n                        // console.log(index);\r\n                        return <NextDays key={day.day} weather={props.weather} nextDaysWeather={day} temperatures={temperatures} />\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DayWeather;","import React, { Component } from 'react';\r\nimport ActualWeather from './ActualWeather';\r\nimport HoursWeather from './HoursWeather';\r\nimport DayWeather from './DayWeather';\r\n\r\nconst APIKey = 'c11fe48850d77d616156f3d2acbd4b2f';\r\n\r\nclass Result extends Component {\r\n\r\n\r\n    state = {\r\n        weatherData: [],\r\n        allDays: []\r\n    }\r\n    dayHours;\r\n\r\n    componentDidMount() {\r\n        const API = `https://api.openweathermap.org/data/2.5/forecast?q=${this.props.weather.value}&appid=${APIKey}`;\r\n        // const\r\n        fetch(API)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                }\r\n                throw Error('Błąd pobierania danych')\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // console.log(data)\r\n                const weatherData = [];\r\n                const dayHours = [...data.list.slice(1, 6)]\r\n                dayHours.forEach(hour => {\r\n                    // console.log(hour)\r\n                    hour = {\r\n                        name: hour.dt_txt.substring(11, 16),\r\n                        uv: Math.round(hour.main.temp - 273.15),\r\n                    }\r\n                    weatherData.push(hour)\r\n                })\r\n                const allDays = [];\r\n                data.list.forEach(day => {\r\n                    day = {\r\n                        date: day.dt_txt.substring(5, 10),\r\n                        day: Number(day.dt_txt.substring(8, 10)),\r\n                        month: Number(day.dt_txt.substring(5, 7)),\r\n                        tempMax: Math.round(day.main.temp_max - 273.15),\r\n                        tempMin: Math.round(day.main.temp_min - 273.15),\r\n                        weather: day.weather[0].icon\r\n\r\n                    }\r\n                    allDays.push(day)\r\n                    // console.log(day)\r\n                })\r\n                this.setState({\r\n                    weatherData: weatherData,\r\n                    allDays: allDays\r\n                })\r\n\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { city, err } = this.props.weather;\r\n\r\n\r\n        let content = null;\r\n\r\n        // console.log(this.state.allDays)\r\n        if (!err && city) {\r\n            // const tempInCelcius = Math.round(temp - 273.15);\r\n            // const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString()\r\n            // const sunsetTime = new Date(sunset * 1000).toLocaleTimeString()\r\n            content = (\r\n\r\n                <div className=\"ResoultContainer\" style={{ marginTop: '90px' }}>\r\n\r\n                    <ActualWeather weather={this.props.weather} />\r\n                    <HoursWeather weatherData={this.state.weatherData} />\r\n                    <DayWeather weather={this.props.weather} weatherData={this.state.weatherData} allDays={this.state.allDays} />\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"resolult\" style={{ color: '#fff', fontSize: '16px', fontWeight: '300' }}>\r\n                {err ? `Brak miasta ${city} w bazie` : content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Result;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Form from './Form.js'\nimport Result from './Result.js';\n\nconst APIKey = `c11fe48850d77d616156f3d2acbd4b2f`;\n\nclass App extends Component {\n  state = {\n    value: '',\n    date: '',\n    city: '',\n    temp: '',\n    pressure: '',\n    wind: '',\n    humidity: '',\n    image: '',\n    err: false,\n    api: false\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      value: e.target.value\n    })\n  }\n\n  handleClick = () => {\n    this.setState({\n      value: '',\n      date: '',\n      city: '',\n      temp: '',\n      pressure: '',\n      wind: '',\n      humidity: '',\n      image: '',\n      err: false,\n      api: false\n    })\n  }\n\n  handleCitySubmit = (e) => {\n    e.preventDefault()\n    const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${APIKey}`;\n    // const API = `https://api.openweathermap.org/data/2.5/forecast?q=${this.state.value}&appid=${APIKey}`;\n\n    fetch(API)\n      .then(response => {\n        if (response.ok) {\n          return response\n        }\n        throw Error(\"Nie udało się\")\n      })\n      .then(response => response.json())\n      .then(data => {\n        // console.log(data);\n        const time = new Date().toLocaleString();\n        this.setState(prevState => ({\n          err: false,\n          date: time,\n          temp: data.main.temp,\n          pressure: data.main.pressure,\n          wind: data.wind.speed,\n          humidity: data.main.humidity,\n          city: prevState.value,\n          image: data.weather[0].icon,\n          api: true\n        }))\n\n      })\n      .catch(err => {\n        // console.log(err);\n        this.setState(prevState => ({\n          err: true,\n          city: prevState.value\n        }))\n      })\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.value && this.state.api ? <><Header handleClick={this.handleClick} /><Result weather={this.state} /></> : <Form\n          value={this.state.value}\n          city={this.state.city}\n          change={this.handleInputChange}\n          submit={this.handleCitySubmit}\n          error={this.state.err}\n          api={this.state.api}\n\n        />}\n\n\n        {/* {!this.state.err ?  : } */}\n\n        {/* <Result weather={this.state} /> */}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/weather_2.1075e6dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/weather_5.c62a7931.svg\";","module.exports = __webpack_public_path__ + \"static/media/weather_3.ea882d2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/weather_4.d5992ae9.svg\";","module.exports = __webpack_public_path__ + \"static/media/weather_7.bd5ad005.svg\";","module.exports = __webpack_public_path__ + \"static/media/weather_8.0a3eb997.svg\";"],"sourceRoot":""}